{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Constipation/constipationBowel.js"],"names":["selected","ConstipationBowel","props","state","question","answer","identified","pr","handleAnswer","this","setState","handleSubmit","updateModels","name","value","onUpdateMany","render","style","textAlign","marginTop","className","onClick","type","checked","e","target","React","Component"],"mappings":"yLAGMA,EAAW,+BAEJC,EAAb,YACE,WAAYC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKC,MAAM,CACPC,SAAU,oBACVC,OAAQ,KACRC,WAAW,KACXC,IAAG,GAPS,EADpB,4CAYEC,aAAA,SAAaH,GACXI,KAAKC,SAAS,CACZL,OAAQA,EACRC,YAAaD,EACbE,IAAI,KAhBV,EAoBEI,aAAA,WAEE,IAIIC,EAAe,CAJC,CAACC,KAAMJ,KAAKN,MAAMC,SAAUU,MAAOL,KAAKN,MAAME,QACpD,CAACQ,KAAK,sBAAsBC,MAAML,KAAKN,MAAMI,IAC3C,CAACM,KAAK,wBAAyBC,OAAM,IAIrDL,KAAKP,MAAMa,aAAaH,EAAcH,KAAKN,MAAMG,aA5BrD,EAgCEU,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,+EACA,2BACE,4BACEC,WAAiC,IAAtBX,KAAKN,MAAME,OAAkBL,EA3CjC,kBA4CPqB,QAAS,kBAAI,EAAKb,cAAa,KAFjC,OAKA,4BAAQY,WAAiC,IAAtBX,KAAKN,MAAME,OAAmBL,EA/CxC,kBAgDTqB,QAAS,kBAAI,EAAKb,cAAa,KAD/B,QAMqB,IAAtBC,KAAKN,MAAME,QACZ,2BACE,0BAAMe,UAAU,6BAAhB,OACA,2BAAOE,KAAK,WACZF,UAAU,sBACVG,QAASd,KAAKN,MAAMI,GACpBc,QAAS,SAACG,GAAD,OAAK,EAAKd,SAAS,CAACH,GAAIiB,EAAEC,OAAOF,cAO5C,uBAAGN,MAAO,CAACE,UAAW,QACI,OAAtBV,KAAKN,MAAME,OAAkB,4BAChCe,UApEU,kBAqEVC,QAAS,kBAAI,EAAKV,iBAFc,QAGhB,wCAnEzB,GAAuCe,IAAMC,WA0E9B1B","file":"component---src-pages-assessment-tool-constipation-constipation-bowel-js-33e0a1d4009b045008f0.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class ConstipationBowel extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"constipationBowel\",\n        answer: null,\n        identified:null,\n        pr:false\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: !answer,\n      pr: false\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var prModel = {name:\"constipationBowelPR\",value:this.state.pr};\n    var doneModel = {name:\"constipationBowelDone\", value:true};\n\n    var updateModels = [questionModel,prModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has the patient had a bowel movement in 3 days?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n\n        {this.state.answer === false &&\n        <p>\n          <span className=\"assessment-checkbox-label\">PR </span>\n          <input type=\"checkbox\"\n          className=\"assessment-checkbox\"\n          checked={this.state.pr}\n          onClick={(e)=>this.setState({pr: e.target.checked})}\n          />\n\n\n        </p>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default ConstipationBowel\n"],"sourceRoot":""}