{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Constipation/constipationLaxatives.js"],"names":["selected","ConstipationLaxatives","props","state","question","answer","identified","shouldComponentUpdate","nextProps","nextState","this","model","console","log","handleAnswer","setState","handleSubmit","updateModels","name","value","onUpdateMany","render","style","textAlign","marginTop","className","onClick","React","Component"],"mappings":"8LAGMA,EAAW,+BAEJC,EAAb,YACE,WAAYC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKC,MAAM,CACPC,SAAU,wBACVC,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEC,sBAAA,SAAsBC,EAAWC,GAC/B,OAAGC,KAAKR,MAAMS,QAAUH,EAAUG,QAChCC,QAAQC,IAAI,eACL,IAdb,EAoBEC,aAAA,SAAaT,GACXK,KAAKK,SAAS,CACZV,OAAQA,EACRC,YAAaD,KAvBnB,EA2BEW,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMR,KAAKP,MAAMC,SAAUe,MAAOT,KAAKP,MAAME,QAClD,CAACa,KAAK,4BAA6BC,OAAM,IAIzDT,KAAKR,MAAMkB,aAAaH,EAAcP,KAAKP,MAAMG,YAAY,IAlCjE,EAsCEe,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,+FACA,2BACE,4BACEC,WAAiC,IAAtBf,KAAKP,MAAME,OAAkBL,EAjDjC,kBAkDP0B,QAAS,kBAAI,EAAKZ,cAAa,KAFjC,OAKA,4BAAQW,WAAiC,IAAtBf,KAAKP,MAAME,OAAmBL,EArDxC,kBAsDT0B,QAAS,kBAAI,EAAKZ,cAAa,KAD/B,OAMF,uBAAGQ,MAAO,CAACE,UAAW,QACI,OAAtBd,KAAKP,MAAME,OAAkB,4BAChCoB,UA7DU,kBA8DVC,QAAS,kBAAI,EAAKV,iBAFc,QAGhB,wCA5DzB,GAA2CW,IAAMC,WAmElC3B","file":"component---src-pages-assessment-tool-constipation-constipation-laxatives-js-8eb2918ee6159d93fe89.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class ConstipationLaxatives extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"constipationLaxatives\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    if(this.props.model === nextProps.model){\n      console.log(\"UPDATING!!\");\n      return true;\n    }\n\n    return false;\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: !answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"constipationLaxativesDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has the patient been prescribed and given sufficient laxatives?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default ConstipationLaxatives\n"],"sourceRoot":""}