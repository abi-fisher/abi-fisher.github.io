{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Infection/infectionChest.js","webpack:///./src/pages/AssessmentTool/Infection/infectionUrine.js","webpack:///./src/pages/AssessmentTool/Infection/infectionSurgical.js","webpack:///./src/pages/AssessmentTool/Infection/index.js"],"names":["selected","InfectionChest","props","handleShowDate","setState","answer","identified","showDate","state","question","date","handleAnswer","this","handleSubmit","updateModels","name","value","dateModel","push","onUpdateMany","render","style","textAlign","marginTop","className","onClick","type","onChange","e","target","length","React","Component","InfectionUrine","InfectionSurgical","Infection","model","infectionChestDone","infectionUrineDone","infectionSurgicalDone"],"mappings":"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","file":"component---src-pages-assessment-tool-infection-index-js-b7be70ab9e5f382054ad.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionChest extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionChest\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionChestDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionChestDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Chest</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionChest\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionUrine extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionUrine\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionUrineDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionUrineDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Urine</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionUrine\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionSurgical extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionSurgical\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionSurgicalDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionSurgicalDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Surgical wound(s)</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionSurgical\n","import React from \"react\"\nimport InfectionChest from \"./infectionChest\";\nimport InfectionUrine from \"./infectionUrine\";\nimport InfectionSurgical from \"./infectionSurgical\";\n\nexport function Infection(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.infectionChestDone ? <InfectionChest {...props} />\n      : !model.infectionUrineDone ? <InfectionUrine {...props}/>\n        : !model.infectionSurgicalDone ? <InfectionSurgical {...props}/>\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Infection\n"],"sourceRoot":""}