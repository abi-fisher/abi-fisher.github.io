{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Hydration/hydrationIntake.js","webpack:///./src/pages/AssessmentTool/Hydration/index.js","webpack:///./src/pages/AssessmentTool/Hydration/hydrationOverloaded.js","webpack:///./src/pages/AssessmentTool/Hydration/hydrationOutput.js"],"names":["HydrationIntake","props","state","question","answer","identified","handleAnswer","this","setState","handleSubmit","updateModels","name","value","onUpdateMany","render","style","textAlign","marginTop","placeholder","type","className","date","onChange","e","target","isNaN","onClick","React","Component","Hydration","model","hydrationOverloadedDone","hydrationIntakeDone","hydrationOutputDone","selected","HydrationOverloaded","HydrationOutput"],"mappings":"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","file":"component---src-pages-assessment-tool-hydration-index-js-a56560bca40114c56472.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\n\nexport class HydrationIntake extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationIntake\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationIntakeDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Oral intake for shift</h3>     \n\n        <p>\n              <input \n              placeholder=\"intake in ml\"\n              type=\"number\"\n              className=\"assessment-input\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({answer: e.target.value})}\n              />\n            </p>\n        <p style={{marginTop: '4em'}}>\n          { !isNaN(this.state.answer) && this.state.answer!== \"\" ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationIntake\n","import React from \"react\"\nimport HydrationOverloaded from './hydrationOverloaded';\nimport HydrationIntake from \"./hydrationIntake\";\nimport HydrationOutput from \"./hydrationOutput\";\n\nexport function Hydration(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.hydrationOverloadedDone ? <HydrationOverloaded {...props} />\n      : !model.hydrationIntakeDone ? <HydrationIntake {...props} />\n        : !model.hydrationOutputDone ? <HydrationOutput {...props} />\n          :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Hydration\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class HydrationOverloaded extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationOverloaded\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationOverloadedDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Does the patient look dehydrated/overloaded?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationOverloaded\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\n\nexport class HydrationOutput extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationOutput\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationOutputDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Urine output for shift</h3>     \n\n        <p>\n              <input \n              placeholder=\"output in ml\"\n              type=\"number\"\n              className=\"assessment-input\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({answer: e.target.value})}\n              />\n            </p>\n        <p style={{marginTop: '4em'}}>\n          { !isNaN(this.state.answer) && this.state.answer!== \"\" ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationOutput\n"],"sourceRoot":""}