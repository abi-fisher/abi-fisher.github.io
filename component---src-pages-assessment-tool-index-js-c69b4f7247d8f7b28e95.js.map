{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Infection/infectionChest.js","webpack:///./src/pages/AssessmentTool/Environmental/environmentBed.js","webpack:///./src/pages/AssessmentTool/Nutrition/nutritionIntake.js","webpack:///./src/pages/AssessmentTool/Environmental/index.js","webpack:///./src/pages/AssessmentTool/Nutrition/nutritionSymptom.js","webpack:///./src/pages/AssessmentTool/Medication/medicationParkinsons.js","webpack:///./src/pages/AssessmentTool/Medication/medicationDementia.js","webpack:///./src/pages/AssessmentTool/Hydration/hydrationIntake.js","webpack:///./src/pages/AssessmentTool/Medication/medicationAnalgesia.js","webpack:///./src/pages/AssessmentTool/index.js","webpack:///./src/pages/AssessmentTool/introduction.js","webpack:///./src/pages/AssessmentTool/AssessmentProgressBar.js","webpack:///./src/pages/AssessmentTool/Constipation/constipationBowel.js","webpack:///./src/pages/AssessmentTool/Constipation/constipationLaxatives.js","webpack:///./src/pages/AssessmentTool/Constipation/index.js","webpack:///./src/pages/AssessmentTool/Hydration/index.js","webpack:///./src/pages/AssessmentTool/Medication/medicationMedications.js","webpack:///./src/pages/AssessmentTool/Pain/index.js","webpack:///./src/pages/AssessmentTool/Infection/infectionUrine.js","webpack:///./src/pages/AssessmentTool/Hydration/hydrationOverloaded.js","webpack:///./src/pages/AssessmentTool/Environmental/environmentHistory.js","webpack:///./src/pages/AssessmentTool/Pain/painHistory.js","webpack:///./src/pages/AssessmentTool/Nutrition/index.js","webpack:///./src/static/DeliriumAssessmentTool.pdf","webpack:///./src/pages/AssessmentTool/Hydration/hydrationOutput.js","webpack:///./src/pages/AssessmentTool/Infection/infectionSurgical.js","webpack:///./src/pages/AssessmentTool/Pain/painAdvise.js","webpack:///./src/pages/AssessmentTool/Medication/index.js","webpack:///./src/pages/AssessmentTool/Pain/painScore.js","webpack:///./src/pages/AssessmentTool/Pain/painAnalgesia.js","webpack:///./src/pages/AssessmentTool/Infection/index.js"],"names":["selected","InfectionChest","props","handleShowDate","setState","answer","identified","showDate","state","question","date","handleAnswer","this","handleSubmit","updateModels","name","value","dateModel","push","onUpdateMany","render","style","textAlign","marginTop","className","onClick","type","onChange","e","target","length","React","Component","EnvironmentBed","NutritionIntake","Environment","model","environmentBedDone","environmentHistoryDone","NutritionSymptom","MedicationParkinsons","MedicationDementia","HydrationIntake","placeholder","isNaN","MedicationAnalgesia","DeliriumKnowledge","started","painModel","isComplete","infectionModel","nutritionModel","constipationModel","hydrationModel","medicationModel","environmentModel","handleStart","handleUpdate","targetModel","Object","assign","console","log","handleUpdateMany","eArray","done","forEach","handleCompleteSection","anyIdentified","generateDateStamp","Number","prototype","padLeft","base","chr","len","String","Array","join","d","Date","dformat","getDate","getMonth","getFullYear","getHours","getMinutes","completed","breadCrumb","to","title","start","complete","onComplete","onUpdate","Introduction","marginBottom","href","downloadFile","download","AssessmentProgressBar","painClass","infectionClass","nutritionClass","constipationClass","hydrationClass","medicationClass","environmentClass","progressBarClass","ConstipationBowel","pr","checked","ConstipationLaxatives","shouldComponentUpdate","nextProps","nextState","Constipation","constipationBowelDone","constipationLaxativesDone","Hydration","hydrationOverloadedDone","hydrationIntakeDone","hydrationOutputDone","MedicationMedications","Pain","painScoreDone","painHistoryDone","painAnalgesiaDone","painAdviseDone","InfectionUrine","HydrationOverloaded","EnvironmentHistory","PainHistory","Nutrition","nutritionIntakeDone","nutritionSymptomDone","module","exports","HydrationOutput","InfectionSurgical","PainAdvise","Medication","medicationDementiaDone","medicationParkinsonsDone","medicationAnalgesiaDone","medicationMedicationsDone","PainScore","unselected","painScore","undefined","PainAnalgesia","Infection","infectionChestDone","infectionUrineDone","infectionSurgicalDone"],"mappings":"8QAGMA,EAAW,+BAEJC,EAAb,YACE,WAAYC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAqBFC,eAAgB,WACd,EAAKC,SAAS,CACZC,QAAQ,EACRC,YAAY,EACZC,UAAU,KAvBZ,EAAKC,MAAM,CACPC,SAAU,iBACVJ,OAAQ,KACRC,WAAW,KAEXC,UAAU,EACVG,KAAK,IATO,EADpB,4CAcEC,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAuB,QAAXD,EACZE,UAAS,EACTG,KAAM,MAnBZ,EA+BEG,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,qBAAsBC,OAAM,IAGlD,GAAGJ,KAAKJ,MAAMD,SAAS,CACrB,IAAIU,EAAY,CAACF,KAAK,qBAAsBC,MAAMJ,KAAKJ,MAAME,MAC9DI,EAAaI,KAAKD,GAGnBL,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aA1CrD,EA8CEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,iEACA,qCACA,2BACE,4BACEC,WAAmC,IAAxBZ,KAAKJ,MAAMD,SAAoBP,EA1DnC,kBA2DPyB,QAAS,kBAAI,EAAKtB,mBAFpB,OAKA,4BACEqB,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EA/DlC,kBAgEPyB,QAAS,kBAAI,EAAKd,aAAa,SAFjC,oBAKA,4BAAQa,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EAnExC,kBAoETyB,QAAS,kBAAI,EAAKd,aAAa,SAD/B,SAMuB,IAAxBC,KAAKJ,MAAMD,UACV,oCACE,8CACA,2BACE,2BACAiB,UAAU,mBACVE,KAAK,OACLV,MAAOJ,KAAKJ,MAAME,KAClBiB,SAAU,SAACC,GAAD,OAAK,EAAKxB,SAAS,CAACM,KAAMkB,EAAEC,OAAOb,aAMnD,uBAAGK,MAAO,CAACE,UAAW,SACO,IAAxBX,KAAKJ,MAAMD,UAA4C,OAAtBK,KAAKJ,MAAMH,SAA6C,IAAxBO,KAAKJ,MAAMD,UAAqBK,KAAKJ,MAAME,KAAKoB,OAAS,EAAK,4BACnIN,UAzFU,kBA0FVC,QAAS,kBAAI,EAAKZ,iBAFiH,QAGnH,wCAxFzB,GAAoCkB,IAAMC,WA+F3B/B,a,+HCjGTD,EAAW,+BAEJiC,EAAb,YACE,WAAY/B,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,iBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,qBAAsBC,OAAM,IAIlDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,8FACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAoCkB,IAAMC,WA0D3BC,a,gIC5DTjC,EAAW,+BAEJkC,EAAb,YACE,WAAYhC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,kBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,sBAAuBC,OAAM,IAInDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,oFACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAqCkB,IAAMC,WA0D5BE,a,oCC/Df,oGAKO,SAASC,EAAYjC,GAE1B,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMC,mBACFD,EAAME,uBACF,+EAD2B,kBAAC,UAAuBpC,GADhC,kBAAC,UAAmBA,GAMrCiC,a,iICbTnC,EAAW,+BAEJuC,EAAb,YACE,WAAYrC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,mBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,uBAAwBC,OAAM,IAIpDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAzBjE,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,+FACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAsCkB,IAAMC,WA0D7BO,a,qIC5DTvC,EAAW,+BAEJwC,EAAb,YACE,WAAYtC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,uBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,2BAA4BC,OAAM,IAIxDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,mGACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,MAIE,4BAAQa,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EAhD1C,kBAiDTyB,QAAS,kBAAI,EAAKd,aAAa,SAD7B,QAMJ,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UAxDU,kBAyDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAvDzB,GAA0CkB,IAAMC,WA8DjCQ,a,mIChETxC,EAAW,+BAEJyC,EAAb,YACE,WAAYvC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,qBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,yBAA0BC,OAAM,IAItDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,iGACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,MAIE,4BAAQa,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EAhD1C,kBAiDTyB,QAAS,kBAAI,EAAKd,aAAa,SAD7B,QAMJ,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UAxDU,kBAyDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAvDzB,GAAwCkB,IAAMC,WA8D/BS,a,gIC/DFC,EAAb,YACE,WAAYxC,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,kBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,KAbd,EAiBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,sBAAuBC,OAAM,IAInDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAxBrD,EA4BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,qDAEA,2BACM,2BACAoB,YAAY,eACZjB,KAAK,SACLF,UAAU,mBACVR,MAAOJ,KAAKJ,MAAME,KAClBiB,SAAU,SAACC,GAAD,OAAK,EAAKxB,SAAS,CAACC,OAAQuB,EAAEC,OAAOb,YAGrD,uBAAGK,MAAO,CAACE,UAAW,QACjBqB,MAAMhC,KAAKJ,MAAMH,SAAgC,KAArBO,KAAKJ,MAAMH,OAG3B,qCAH0C,4BAC1DmB,UAhDU,kBAiDVC,QAAS,kBAAI,EAAKZ,iBAFwC,WA7CnE,GAAqCkB,IAAMC,WAuD5BU,a,kICxDT1C,EAAW,+BAEJ6C,EAAb,YACE,WAAY3C,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,sBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,0BAA2BC,OAAM,IAIvDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,kGACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAyCkB,IAAMC,WA0DhCa,a,4RChDFC,EAAb,YAEE,WAAY5C,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAQ,CAEXuC,SAAS,EAETC,UAAW,CAAEC,YAAY,GACzBC,eAAgB,CAAED,YAAY,GAC9BE,eAAe,CAAEF,YAAY,GAC7BG,kBAAmB,CAAEH,YAAY,GACjCI,eAAe,CAAEJ,YAAY,GAC7BK,gBAAgB,CAAEL,YAAY,GAC9BM,iBAAiB,CAAEN,YAAY,IAbjB,EAFpB,4CAgCEO,YAAA,WACE5C,KAAKR,SAAS,CAAC2C,SAAQ,KAjC3B,EAmCEU,aAAA,SAAaC,EAAa9B,EAAGtB,GAAY,IAAD,EAGlC8B,EAAQuB,OAAOC,OAAO,GAAIhD,KAAKJ,MAAMkD,IAEzCG,QAAQC,IAAI1B,GAEZA,EAAMR,EAAEb,MAAQa,EAAEZ,OAEA,IAAfV,IAAoB8B,EAAM9B,YAAa,GAE1CM,KAAKR,WAAL,MAAgBsD,GAActB,EAA9B,IAAuC,gBA9C3C,EAkDE2B,iBAAA,SAAiBL,EAAaM,EAAQ1D,EAAY2D,GAAM,IAAD,SACjD7B,EAAQuB,OAAOC,OAAO,GAAIhD,KAAKJ,MAAMkD,IAEzCM,EAAOE,SAAQ,SAAAtC,GACbQ,EAAMR,EAAEb,MAAQa,EAAEZ,UAGF,IAAfV,IAAoB8B,EAAM9B,YAAa,GAE1CM,KAAKR,WAAL,MAAgBsD,GAActB,EAA9B,IAAuC,WAClC6B,GAAM,EAAKE,sBAAsBT,OA5D1C,EAgEES,sBAAA,SAAsBT,GAAa,IAAD,SAC5BtB,EAAQuB,OAAOC,OAAO,GAAIhD,KAAKJ,MAAMkD,IACzCtB,EAAMa,YAAa,EAEnBrC,KAAKR,WAAL,MAAgBsD,GAActB,EAA9B,IAAuC,WACrCyB,QAAQC,IAAI,EAAKtD,WArEvB,EAyEE4D,cAAA,WACE,QAAGxD,KAAKJ,MAAMwC,UAAU1C,eACrBM,KAAKJ,MAAM0C,eAAe5C,eAC1BM,KAAKJ,MAAM2C,eAAe7C,eAC1BM,KAAKJ,MAAM4C,kBAAkB9C,eAC7BM,KAAKJ,MAAM6C,eAAe/C,eAC1BM,KAAKJ,MAAM8C,gBAAgBhD,cAC3BM,KAAKJ,MAAM+C,iBAAiBjD,iBAhFnC,EAoFE+D,kBAAA,WACIC,OAAOC,UAAUC,QAAU,SAASC,EAAKC,GACvC,IAAKC,EAAOC,OAAOH,GAAQ,IAAI3C,OAAS8C,OAAOhE,MAAMkB,OAAQ,EAC7D,OAAO6C,EAAM,EAAG,IAAIE,MAAMF,GAAKG,KAAKJ,GAAO,KAAK9D,KAAOA,MAG3D,IAAImE,EAAI,IAAIC,KACRC,EAAU,CACZF,EAAEG,UAAUV,WACXO,EAAEI,WAAW,GAAGX,UACjBO,EAAEK,eACFN,KAAK,KAAO,IAAM,CAChBC,EAAEM,WAAWb,UACbO,EAAEO,aAAad,WACfM,KAAK,KAEPlE,KAAKR,SAAS,CAACmF,UAAWN,KApGhC,EAwGA7D,OAAA,WAAS,IAAD,OAEN,OACE,kBAAC,IAAD,CACEoE,WACE,oCAAE,kBAAC,OAAD,CAAMhE,UAAU,cAAciE,GAAG,KAAjC,QAAF,wBAGF,kBAAC,IAAD,CAAKC,MAAM,6BACT9E,KAAKJ,MAAMuC,QAEVnC,KAAKJ,MAAM+C,iBAAiBN,WAC/B,oCACE,wBAAIzB,UAAU,uBAAd,uBACA,yBAAKH,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC5CX,KAAKwD,gBACJ,wEACI,0DAKN,kBAAC,UAA0BxD,KAAKJ,OAbX,kBAAC,UAAD,CAAcmF,MAAO,kBAAI,EAAKnC,iBAiBzD5C,KAAKJ,MAAMuC,UAAanC,KAAKJ,MAAMwC,UAAUC,WAOxCrC,KAAKJ,MAAM0C,eAAeD,WAMxBrC,KAAKJ,MAAM2C,eAAeF,WAMxBrC,KAAKJ,MAAM4C,kBAAkBH,WAM3BrC,KAAKJ,MAAM6C,eAAeJ,WAMxBrC,KAAKJ,MAAM8C,gBAAgBL,WAMzBrC,KAAKJ,MAAM+C,iBAAiBN,WAO7B,6BACE,kBAAC,UAAD,eAAuB2C,UAAQ,GAAKhF,KAAKJ,QACzC,kBAAC,UAAWI,KAAKJ,QARnB,kBAAC,UAAD,CACA4B,MAAOxB,KAAKJ,MAAM+C,iBAClBpC,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,mBAAoBC,EAAQ1D,EAAY2D,IACxG4B,WAAY,kBAAI,EAAK1B,sBAAsB,uBAT7C,kBAAC,UAAD,CACA/B,MAAOxB,KAAKJ,MAAM8C,gBAClBnC,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,kBAAmBC,EAAQ1D,EAAY2D,IACvG4B,WAAY,kBAAI,EAAK1B,sBAAsB,sBAT7C,kBAAC,UAAD,CACA/B,MAAOxB,KAAKJ,MAAM6C,eAClBlC,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,iBAAkBC,EAAQ1D,EAAY2D,IACtG4B,WAAY,kBAAI,EAAK1B,sBAAsB,qBAT7C,kBAAC,UAAD,CACA/B,MAAOxB,KAAKJ,MAAM4C,kBAClBjC,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,oBAAqBC,EAAQ1D,EAAY2D,IACzG4B,WAAY,kBAAI,EAAK1B,sBAAsB,wBAT7C,kBAAC,UAAD,CACA/B,MAAOxB,KAAKJ,MAAM2C,eAClBhC,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,iBAAkBC,EAAQ1D,EAAY2D,IACtG4B,WAAY,kBAAI,EAAK1B,sBAAsB,qBAT7C,kBAAC,UAAD,CACE/B,MAAOxB,KAAKJ,MAAM0C,eAClB/B,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,iBAAkBC,EAAQ1D,EAAY2D,IACtG4B,WAAY,kBAAI,EAAK1B,sBAAsB,qBAV/C,kBAAC,UAAD,CACE/B,MAAOxB,KAAKJ,MAAMwC,UAClB8C,SAAU,SAAClE,EAAGtB,GAAJ,OAAiB,EAAKmD,aAAa,YAAa7B,EAAGtB,IAC7Da,aAAc,SAAC6C,EAAQ1D,EAAY2D,GAArB,OAA4B,EAAKF,iBAAiB,YAAaC,EAAQ1D,EAAY2D,IACjG4B,WAAY,kBAAI,EAAK1B,sBAAsB,mBAvIjD,GAAuCpC,IAAMC,WA4L9Bc,a,gJCxMFiD,EAAb,YAEE,WAAY7F,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAQ,GAHG,EAFpB,oCAUCY,OAAA,WAAS,IAAD,OAEP,OACE,yBAAKI,UAAU,yBAAyBH,MAAO,CAACC,UAAU,WACxD,yBAAKE,UAAU,gBACb,0DACA,2NAIA,4BACEA,UAAU,kBACVH,MAAO,CAAC2E,aAAa,SACrBvE,QAAS,WAAK,EAAKvB,MAAMyF,UAH3B,oBAMA,2BACA,4HAKF,yBAAKnE,UAAU,gBACb,wDACA,uBACEA,UAAU,yBACVyE,KAAMC,IACNC,UAAQ,GAHV,YAOA,+BAzCR,GAAkCpE,IAAMC,WAkDzB+D,a,kCCrDf,sFAEO,SAASK,EAAsBlG,GAAO,IAGzC8C,EAQE9C,EARF8C,UACAE,EAOEhD,EAPFgD,eACAC,EAMEjD,EANFiD,eACAC,EAKElD,EALFkD,kBACAC,EAIEnD,EAJFmD,eACAC,EAGEpD,EAHFoD,gBACAC,EAEErD,EAFFqD,iBACAqC,EACE1F,EADF0F,SAGIS,EAAarD,EAA0BA,EAAUC,WACrDD,EAAU1C,WAAa,aAAe,WACnC,aAF0B,YAIzBgG,EAAkBpD,EAA8BA,EAAeD,WACnEC,EAAe5C,WAAa,aAAe,WACvC0C,EAAUC,WAAa,aAAe,aAFH,YAInCsD,EAAkBpD,EAA8BA,EAAeF,WACnEE,EAAe7C,WAAa,aAAe,WACvC4C,EAAeD,WAAa,aAAe,aAFR,YAInCuD,EAAqBpD,EAAkCA,EAAkBH,WAC7EG,EAAkB9C,WAAa,aAAe,WAC1C6C,EAAeF,WAAa,aAAe,aAFF,YAIzCwD,EAAkBpD,EAA+BA,EAAeJ,WACpEI,EAAe/C,WAAa,aAAe,WACvC8C,EAAkBH,WAAa,aAAe,aAFX,YAInCyD,EAAmBpD,EAAgCA,EAAgBL,WACvEK,EAAgBhD,WAAa,aAAe,WACxC+C,EAAeJ,WAAa,aAAe,aAFN,YAIrC0D,EAAoBpD,EAAgCA,EAAiBN,WACzEM,EAAiBjD,WAAa,aAAe,WACzCgD,EAAgBL,WAAa,aAAe,aAFL,YAInC2D,EAAmBhB,EAAW,wBAA0B,eAElE,OAEE,yBAAKpE,UAAWoF,GACd,yBAAKpF,UAAW6E,GACE,eAAdA,GAA8BT,EAAY,OAAO,KAErD,yBAAKpE,UAAW8E,GACO,eAAnBA,GAAmCV,EAAY,YAAY,KAE/D,yBAAKpE,UAAW+E,GACO,eAAnBA,GAAmCX,EAAY,YAAY,KAE/D,yBAAKpE,UAAWgF,GACU,eAAtBA,GAAsCZ,EAAY,eAAe,KAErE,yBAAKpE,UAAWiF,GACO,eAAnBA,GAAmCb,EAAY,YAAY,KAE/D,yBAAKpE,UAAWkF,GACQ,eAApBA,GAAoCd,EAAY,aAAa,KAEjE,yBAAKpE,UAAWmF,GACS,eAArBA,GAAqCf,EAAY,cAAc,MAO1DQ,a,gICvETpG,EAAW,+BAEJ6G,EAAb,YACE,WAAY3G,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,oBACVJ,OAAQ,KACRC,WAAW,KACXwG,IAAG,GAPS,EADpB,4CAYEnG,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,YAAaD,EACbyG,IAAI,KAhBV,EAoBEjG,aAAA,WAEE,IAIIC,EAAe,CAJC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QACpD,CAACU,KAAK,sBAAsBC,MAAMJ,KAAKJ,MAAMsG,IAC3C,CAAC/F,KAAK,wBAAyBC,OAAM,IAIrDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aA5BrD,EAgCEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,+EACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EA3CjC,kBA4CPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA/CxC,kBAgDTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,QAMqB,IAAtBC,KAAKJ,MAAMH,QACZ,2BACE,0BAAMmB,UAAU,6BAAhB,OACA,2BAAOE,KAAK,WACZF,UAAU,sBACVuF,QAASnG,KAAKJ,MAAMsG,GACpBrF,QAAS,SAACG,GAAD,OAAK,EAAKxB,SAAS,CAAC0G,GAAIlF,EAAEC,OAAOkF,cAO5C,uBAAG1F,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApEU,kBAqEVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnEzB,GAAuCkB,IAAMC,WA0E9B6E,a,oIC5ET7G,EAAW,+BAEJgH,EAAb,YACE,WAAY9G,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,wBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWE2G,sBAAA,SAAsBC,EAAWC,GAC/B,OAAGvG,KAAKV,MAAMkC,QAAU8E,EAAU9E,QAChCyB,QAAQC,IAAI,eACL,IAdb,EAoBEnD,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,YAAaD,KAvBnB,EA2BEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,4BAA6BC,OAAM,IAIzDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAlCjE,EAsCEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,+FACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAjDjC,kBAkDPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EArDxC,kBAsDTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UA7DU,kBA8DVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCA5DzB,GAA2CkB,IAAMC,WAmElCgF,a,kCCxEf,qGAIO,SAASI,EAAalH,GAE3B,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMiF,sBACFjF,EAAMkF,0BACF,+EAD8B,kBAAC,UAA0BpH,GADnC,kBAAC,UAAsBA,GAM3CkH,a,kCCff,8GAKO,SAASG,EAAUrH,GAExB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMoF,wBACFpF,EAAMqF,oBACJrF,EAAMsF,oBACN,+EAD4B,kBAAC,UAAoBxH,GADvB,kBAAC,UAAoBA,GADrB,kBAAC,UAAwBA,GAO/CqH,a,oICdTvH,EAAW,+BAEJ2H,EAAb,YACE,WAAYzH,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,wBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,4BAA6BC,OAAM,IAIzDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAzBjE,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,2HACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAA2CkB,IAAMC,WA0DlC2F,a,kCC/Df,qHAMO,SAASC,EAAK1H,GAEnB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMyF,cACFzF,EAAM0F,gBACJ1F,EAAM2F,kBACJ3F,EAAM4F,eACN,+EADuB,kBAAC,UAAe9H,GADf,kBAAC,UAAkBA,GADvB,kBAAC,UAAgBA,GADvB,kBAAC,UAAcA,GAQ3B0H,a,6HChBT5H,EAAW,+BAEJiI,EAAb,YACE,WAAY/H,GAAO,IAAD,SAChB,cAAMA,IAAN,MAqBFC,eAAgB,WACd,EAAKC,SAAS,CACZC,QAAQ,EACRC,YAAY,EACZC,UAAU,KAvBZ,EAAKC,MAAM,CACPC,SAAU,iBACVJ,OAAQ,KACRC,WAAW,KAEXC,UAAU,EACVG,KAAK,IATO,EADpB,4CAcEC,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAuB,QAAXD,EACZE,UAAS,EACTG,KAAM,MAnBZ,EA+BEG,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,qBAAsBC,OAAM,IAGlD,GAAGJ,KAAKJ,MAAMD,SAAS,CACrB,IAAIU,EAAY,CAACF,KAAK,qBAAsBC,MAAMJ,KAAKJ,MAAME,MAC9DI,EAAaI,KAAKD,GAGnBL,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aA1CrD,EA8CEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,iEACA,qCACA,2BACE,4BACEC,WAAmC,IAAxBZ,KAAKJ,MAAMD,SAAoBP,EA1DnC,kBA2DPyB,QAAS,kBAAI,EAAKtB,mBAFpB,OAKA,4BACEqB,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EA/DlC,kBAgEPyB,QAAS,kBAAI,EAAKd,aAAa,SAFjC,oBAKA,4BAAQa,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EAnExC,kBAoETyB,QAAS,kBAAI,EAAKd,aAAa,SAD/B,SAMuB,IAAxBC,KAAKJ,MAAMD,UACV,oCACE,8CACA,2BACE,2BACAiB,UAAU,mBACVE,KAAK,OACLV,MAAOJ,KAAKJ,MAAME,KAClBiB,SAAU,SAACC,GAAD,OAAK,EAAKxB,SAAS,CAACM,KAAMkB,EAAEC,OAAOb,aAMnD,uBAAGK,MAAO,CAACE,UAAW,SACO,IAAxBX,KAAKJ,MAAMD,UAA4C,OAAtBK,KAAKJ,MAAMH,SAA6C,IAAxBO,KAAKJ,MAAMD,UAAqBK,KAAKJ,MAAME,KAAKoB,OAAS,EAAK,4BACnIN,UAzFU,kBA0FVC,QAAS,kBAAI,EAAKZ,iBAFiH,QAGnH,wCAxFzB,GAAoCkB,IAAMC,WA+F3BiG,a,oICjGTjI,EAAW,+BAEJkI,EAAb,YACE,WAAYhI,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,sBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,0BAA2BC,OAAM,IAIvDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,4EACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAyCkB,IAAMC,WA0DhCkG,a,iIC5DTlI,EAAW,+BAEJmI,EAAb,YACE,WAAYjI,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,qBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,yBAA0BC,OAAM,IAItDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAzBjE,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAE3C,sDACA,uBAAGC,UAAU,mBACX,4BACE,qEACA,8CACA,8DACA,mDAIJ,2BACE,4BACEA,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAlDjC,kBAmDPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EAtDxC,kBAuDTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UA9DU,kBA+DVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCA7DzB,GAAwCkB,IAAMC,WAoE/BmG,a,4HCtETnI,EAAW,+BAEJoI,EAAb,YACE,WAAYlI,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,cACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,kBAAmBC,OAAM,IAI/CJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAzBrD,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,4FACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAiCkB,IAAMC,WA0DxBoG,a,kCC/Df,kGAIO,SAASC,EAAUnI,GAExB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMkG,oBACFlG,EAAMmG,qBACF,+EADyB,kBAAC,UAAqBrI,GAD3B,kBAAC,UAAoBA,GAMvCmI,a,qBCffG,EAAOC,QAAU,IAA0B,sE,8HCI9BC,EAAb,YACE,WAAYxI,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,kBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,KAbd,EAiBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,sBAAuBC,OAAM,IAInDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAxBjE,EA4BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,sDAEA,2BACM,2BACAoB,YAAY,eACZjB,KAAK,SACLF,UAAU,mBACVR,MAAOJ,KAAKJ,MAAME,KAClBiB,SAAU,SAACC,GAAD,OAAK,EAAKxB,SAAS,CAACC,OAAQuB,EAAEC,OAAOb,YAGrD,uBAAGK,MAAO,CAACE,UAAW,QACjBqB,MAAMhC,KAAKJ,MAAMH,SAAgC,KAArBO,KAAKJ,MAAMH,OAG3B,qCAH0C,4BAC1DmB,UAhDU,kBAiDVC,QAAS,kBAAI,EAAKZ,iBAFwC,WA7CnE,GAAqCkB,IAAMC,WAuD5B0G,a,gICxDT1I,EAAW,+BAEJ2I,EAAb,YACE,WAAYzI,GAAO,IAAD,SAChB,cAAMA,IAAN,MAqBFC,eAAgB,WACd,EAAKC,SAAS,CACZC,QAAQ,EACRC,YAAY,EACZC,UAAU,KAvBZ,EAAKC,MAAM,CACPC,SAAU,oBACVJ,OAAQ,KACRC,WAAW,KAEXC,UAAU,EACVG,KAAK,IATO,EADpB,4CAcEC,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAuB,QAAXD,EACZE,UAAS,EACTG,KAAM,MAnBZ,EA+BEG,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,wBAAyBC,OAAM,IAGrD,GAAGJ,KAAKJ,MAAMD,SAAS,CACrB,IAAIU,EAAY,CAACF,KAAK,wBAAyBC,MAAMJ,KAAKJ,MAAME,MACjEI,EAAaI,KAAKD,GAGnBL,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IA1CjE,EA6CEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,iEACA,iDACA,2BACE,4BACEC,WAAmC,IAAxBZ,KAAKJ,MAAMD,SAAoBP,EAzDnC,kBA0DPyB,QAAS,kBAAI,EAAKtB,mBAFpB,OAKA,4BACEqB,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EA9DlC,kBA+DPyB,QAAS,kBAAI,EAAKd,aAAa,SAFjC,oBAKA,4BAAQa,UAAiC,QAAtBZ,KAAKJ,MAAMH,OAAmBL,EAlExC,kBAmETyB,QAAS,kBAAI,EAAKd,aAAa,SAD/B,SAMuB,IAAxBC,KAAKJ,MAAMD,UACV,oCACE,8CACA,2BACE,2BACAiB,UAAU,mBACVE,KAAK,OACLV,MAAOJ,KAAKJ,MAAME,KAClBiB,SAAU,SAACC,GAAD,OAAK,EAAKxB,SAAS,CAACM,KAAMkB,EAAEC,OAAOb,aAMnD,uBAAGK,MAAO,CAACE,UAAW,SACO,IAAxBX,KAAKJ,MAAMD,UAA4C,OAAtBK,KAAKJ,MAAMH,SAA6C,IAAxBO,KAAKJ,MAAMD,UAAqBK,KAAKJ,MAAME,KAAKoB,OAAS,EAAK,4BACnIN,UAxFU,kBAyFVC,QAAS,kBAAI,EAAKZ,iBAFiH,QAGnH,wCAvFzB,GAAuCkB,IAAMC,WA8F9B2G,a,yHChGT3I,EAAW,+BAEJ4I,EAAb,YACE,WAAY1I,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,aACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,EACRC,WAAYD,KAdlB,EAkBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,iBAAkBC,OAAM,IAI9CJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,YAAY,IAzBjE,EA6BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,yFACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAxCjC,kBAyCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA5CxC,kBA6CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UApDU,kBAqDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAnDzB,GAAgCkB,IAAMC,WA0DvB4G,a,kCC/Df,2HAMO,SAASC,EAAW3I,GAEzB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAM0G,uBACF1G,EAAM2G,yBACJ3G,EAAM4G,wBACJ5G,EAAM6G,0BACN,+EADkC,kBAAC,UAA0B/I,GAD/B,kBAAC,UAAwBA,GAD1B,kBAAC,UAAwBA,GAD/B,kBAAC,UAAuBA,GAQ7C2I,a,kCCnBf,0EAEO,SAASK,EAAUhJ,GAExB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GACpC+G,EAAa,kBACbnJ,EAAW,+BAEXyD,EAAe,SAAC1C,EAAMC,EAAOV,GAC/BJ,EAAM4F,SAAS,CAAC/E,OAAKC,SAAQV,IAGjC,OAEI,yBAAKe,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,uBAAGF,MAAO,CAAC2E,aAAc,SAAzB,yBACA,8DACA,2BACE,4BACExE,UAA+B,IAApBY,EAAMgH,UAAkBpJ,EAAWmJ,EAC9C1H,QAAS,kBAAIgC,EAAa,YAAa,KAFzC,QAKA,4BAAQjC,UAA+B,IAApBY,EAAMgH,UAAkBpJ,EAAWmJ,EACtD1H,QAAS,kBAAIgC,EAAa,YAAa,KADvC,SAKF,2BACE,4BAAQjC,UAA+B,IAApBY,EAAMgH,UAAkBpJ,EAAWmJ,EACtD1H,QAAS,kBAAIgC,EAAa,YAAa,GAAG,KAD1C,YAIA,4BAAQjC,UAA+B,IAApBY,EAAMgH,UAAkBpJ,EAAWmJ,EACtD1H,QAAS,kBAAIgC,EAAa,YAAa,GAAG,KAD1C,WAMF,uBAAGpC,MAAO,CAACE,UAAW,aACE8H,IAApBjH,EAAMgH,UAA0B,4BACnC5H,UAAW2H,EACX1H,QAAS,kBAAIgC,EAAa,iBAAiB,KAFR,QAGnB,uCAMVyF,a,4HC9CTlJ,EAAW,+BAEJsJ,EAAb,YACE,WAAYpJ,GAAO,IAAD,SAChB,cAAMA,IAAN,MAEKM,MAAM,CACPC,SAAU,gBACVJ,OAAQ,KACRC,WAAW,MANC,EADpB,4CAWEK,aAAA,SAAaN,GACXO,KAAKR,SAAS,CACZC,OAAQA,KAbd,EAiBEQ,aAAA,WAEE,IAGIC,EAAe,CAHC,CAACC,KAAMH,KAAKJ,MAAMC,SAAUO,MAAOJ,KAAKJ,MAAMH,QAClD,CAACU,KAAK,oBAAqBC,OAAM,IAIjDJ,KAAKV,MAAMiB,aAAaL,EAAcF,KAAKJ,MAAMF,aAxBrD,EA4BEc,OAAA,WAAS,IAAD,OAEN,OAEE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,UAAW,QAC3C,yEACA,2BACE,4BACEC,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAkBL,EAvCjC,kBAwCPyB,QAAS,kBAAI,EAAKd,cAAa,KAFjC,OAKA,4BAAQa,WAAiC,IAAtBZ,KAAKJ,MAAMH,OAAmBL,EA3CxC,kBA4CTyB,QAAS,kBAAI,EAAKd,cAAa,KAD/B,OAMF,uBAAGU,MAAO,CAACE,UAAW,QACI,OAAtBX,KAAKJ,MAAMH,OAAkB,4BAChCmB,UAnDU,kBAoDVC,QAAS,kBAAI,EAAKZ,iBAFc,QAGhB,wCAlDzB,GAAmCkB,IAAMC,WAyD1BsH,a,kCC9Df,8GAKO,SAASC,EAAUrJ,GAExB,IAAMkC,EAAQlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,GAE1C,OACGA,EAAMoH,mBACFpH,EAAMqH,mBACJrH,EAAMsH,sBACJ,+EAD4B,kBAAC,UAAsBxJ,GAD5B,kBAAC,UAAmBA,GADxB,kBAAC,UAAmBA,GAOrCqJ","file":"component---src-pages-assessment-tool-index-js-c69b4f7247d8f7b28e95.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionChest extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionChest\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionChestDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionChestDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Chest</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionChest\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class EnvironmentBed extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"environmentBed\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"environmentBedDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has there been a change in bed space within the last 48 hours?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default EnvironmentBed\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class NutritionIntake extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"nutritionIntake\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"nutritionIntakeDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Poor nutritional intake? If so, start food charting </h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default NutritionIntake\n","import React from \"react\"\n\nimport EnvironmentBed from './environmentBed';\nimport EnvironmentHistory from './environmentHistory';\n\nexport function Environment(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.environmentBedDone ? <EnvironmentBed {...props} />\n      : !model.environmentHistoryDone ? <EnvironmentHistory {...props} />\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Environment\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class NutritionSymptom extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"nutritionSymptom\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"nutritionSymptomDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Is the patient symptomatic of aspiration/slow swallow/pouching?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default NutritionSymptom\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationParkinsons extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationParkinsons\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationParkinsonsDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has there been a change/omission in regular Parkinson’s medication?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n            <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationParkinsons\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationDementia extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationDementia\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationDementiaDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has there been a change/omission in regular dementia medications?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n            <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationDementia\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\n\nexport class HydrationIntake extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationIntake\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationIntakeDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Oral intake for shift</h3>     \n\n        <p>\n              <input \n              placeholder=\"intake in ml\"\n              type=\"number\"\n              className=\"assessment-input\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({answer: e.target.value})}\n              />\n            </p>\n        <p style={{marginTop: '4em'}}>\n          { !isNaN(this.state.answer) && this.state.answer!== \"\" ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationIntake\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationAnalgesia extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationAnalgesia\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationAnalgesiaDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has new analgesia been given recently? Specifically NSAIDs/opiates</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationAnalgesia\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Introduction from \"./introduction\"\nimport AssessmentProgressBar from \"./AssessmentProgressBar\"\nimport Pain from \"./Pain\"\nimport Infection from \"./Infection\"\nimport Nutrition from \"./Nutrition\"\nimport Constipation from \"./Constipation\"\nimport Hydration from \"./Hydration\"\nimport Medication from \"./Medication\"\nimport Environment from \"./Environmental\"\nimport Output from \"./Output\"\n\nexport class DeliriumKnowledge extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n\n      started: false,\n\n      painModel: { isComplete: false },\n      infectionModel: { isComplete: false },\n      nutritionModel:{ isComplete: false },\n      constipationModel: { isComplete: false },\n      hydrationModel:{ isComplete: false },\n      medicationModel:{ isComplete: false },\n      environmentModel:{ isComplete: false }\n\n  /* DEBUG OUTPUT\n\n      painModel: { isComplete: true },\n      infectionModel: { isComplete: true },\n      nutritionModel:{ isComplete: true },\n      constipationModel: { isComplete: true },\n      hydrationModel:{ isComplete: true },\n      medicationModel:{ isComplete: true },\n      environmentModel:{ isComplete: true }\n\n     */   \n    }\n\n  }\n\n  handleStart(){\n    this.setState({started:true})\n  }\n  handleUpdate(targetModel, e, identified){\n\n\n    let model = Object.assign({}, this.state[targetModel]);\n\n    console.log(model);\n\n    model[e.name] = e.value;\n\n    if(identified === true)model.identified = true;\n    \n    this.setState({[targetModel]: model }, ()=>{\n    });\n  }\n\n  handleUpdateMany(targetModel, eArray, identified, done){\n    let model = Object.assign({}, this.state[targetModel]);\n\n    eArray.forEach(e => {\n      model[e.name] = e.value;\n    });\n\n    if(identified === true)model.identified = true;\n\n    this.setState({[targetModel]: model }, ()=>{\n      if(done) this.handleCompleteSection(targetModel);\n    });\n  }\n\n  handleCompleteSection(targetModel){\n    let model = Object.assign({}, this.state[targetModel]);\n    model.isComplete = true;\n\n    this.setState({[targetModel]: model }, ()=>{\n      console.log(this.state);\n    });\n  }\n\n  anyIdentified(){  \n    if(this.state.painModel.identified) return true;\n    if(this.state.infectionModel.identified) return true;\n    if(this.state.nutritionModel.identified) return true;\n    if(this.state.constipationModel.identified) return true;\n    if(this.state.hydrationModel.identified) return true;\n    if(this.state.medicationModel.identified) return true;\n    if(this.state.environmentModel.identified) return true;\n    return false;\n  }\n\n  generateDateStamp(){\n      Number.prototype.padLeft = function(base,chr){\n        var  len = (String(base || 10).length - String(this).length)+1;\n        return len > 0? new Array(len).join(chr || '0')+this : this;\n    }\n       \n    var d = new Date();\n    var dformat = [ \n      d.getDate().padLeft(),\n      (d.getMonth()+1).padLeft(),                  \n      d.getFullYear()\n    ].join('/') + ' ' + [ \n        d.getHours().padLeft(),\n        d.getMinutes().padLeft()\n      ].join(':');\n\n      this.setState({completed: dformat});\n\n  }\n\nrender(){\n\n  return (\n    <Layout\n      breadCrumb={\n        <><Link className=\"custom-link\" to=\"/\">Home</Link> \\ Assessment Tool</>   \n      }\n    >\n      <SEO title=\"Delirium Assessment Tool\" />  \n      {!this.state.started ? <Introduction start={()=>this.handleStart()}/> \n        :\n         this.state.environmentModel.isComplete ?      \n      <>\n        <h2 className=\"assessment-complete\">Assessment Complete</h2> \n        <div style={{textAlign: 'center', marginTop: '1em'}}>\n        {this.anyIdentified() ?\n          <p>The following areas have been identified:</p>\n            : <p>No areas were identified.</p>\n        }\n        </div>\n      </>\n      \n      : <AssessmentProgressBar {...this.state}/>}\n  \n\n{\n  this.state.started && (!this.state.painModel.isComplete ?\n    <Pain\n      model={this.state.painModel}\n      onUpdate={(e, identified)=>this.handleUpdate(\"painModel\", e, identified)}\n      onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"painModel\", eArray, identified, done)}\n      onComplete={()=>this.handleCompleteSection(\"painModel\")}\n    />\n    : !this.state.infectionModel.isComplete ?\n      <Infection\n        model={this.state.infectionModel}\n        onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"infectionModel\", eArray, identified, done)}\n        onComplete={()=>this.handleCompleteSection(\"infectionModel\")}\n      />\n      : !this.state.nutritionModel.isComplete ?\n        <Nutrition\n        model={this.state.nutritionModel}\n        onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"nutritionModel\", eArray, identified, done)}\n        onComplete={()=>this.handleCompleteSection(\"nutritionModel\")}\n        />\n        : !this.state.constipationModel.isComplete ?\n          <Constipation\n          model={this.state.constipationModel}\n          onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"constipationModel\", eArray, identified, done)}\n          onComplete={()=>this.handleCompleteSection(\"constipationModel\")}\n          />\n          : !this.state.hydrationModel.isComplete ?\n            <Hydration\n            model={this.state.hydrationModel}\n            onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"hydrationModel\", eArray, identified, done)}\n            onComplete={()=>this.handleCompleteSection(\"hydrationModel\")}\n            />\n            : !this.state.medicationModel.isComplete ?\n              <Medication\n              model={this.state.medicationModel}\n              onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"medicationModel\", eArray, identified, done)}\n              onComplete={()=>this.handleCompleteSection(\"medicationModel\")}\n              />\n              : !this.state.environmentModel.isComplete ?\n                <Environment\n                model={this.state.environmentModel}\n                onUpdateMany={(eArray, identified, done)=>this.handleUpdateMany(\"environmentModel\", eArray, identified, done)}\n                onComplete={()=>this.handleCompleteSection(\"environmentModel\")}\n                />\n                :      \n                <div>\n                  <AssessmentProgressBar complete {...this.state}/>\n                  <Output {...this.state}/>\n                </div> )      \n}\n\n      \n    </Layout>\n  )\n}\n}\n\n\n\nexport default DeliriumKnowledge\n","import React from \"react\"\nimport downloadFile from \"../../static/DeliriumAssessmentTool.pdf\"\n\nexport class Introduction extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n render(){\n\n  return (\n    <div className=\"info-section-container\" style={{textAlign:'center'}}>\n      <div className=\"info-section\">\n        <h3>Online Delirium Assessment</h3>\n        <p>\n          The delirium assessment tool can be used on this site without patient identifiable information. \n          This can be filled out after printing to stay in line with Information Governance protocols.\n        </p>\n        <button \n          className=\"btn btn-primary\" \n          style={{marginBottom:'1.5em'}}\n          onClick={()=>{this.props.start()}}>\n            Start Assessment\n        </button>\n        <p>\n        <small>\n          Select each answer and a printable version will be available to you via PDF at the end.\n        </small>\n        </p>\n      </div>\n      <div className=\"info-section\">\n        <h4>Assessment Tool Template</h4>\n        <a \n          className=\"btn btn-primary btn-sm\" \n          href={downloadFile}\n          download\n        >\n            Download\n        </a>\n        <p/>\n      </div>\n    </div>\n  )\n}\n}\n\n\n\nexport default Introduction\n","import React from \"react\"\n\nexport function AssessmentProgressBar(props){\n  \n  const {\n    painModel, \n    infectionModel, \n    nutritionModel, \n    constipationModel,\n    hydrationModel, \n    medicationModel, \n    environmentModel,\n    complete\n  } = props;\n\n  const painClass = !painModel ? \"undefined\" : painModel.isComplete ? \n    painModel.identified ? \"identified\" : \"complete\"\n     : \"inprogress\";\n\n  const infectionClass = !infectionModel ? \"undefined\" :infectionModel.isComplete ?\n    infectionModel.identified ? \"identified\" : \"complete\" \n      : painModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n  const nutritionClass = !nutritionModel ? \"undefined\" :nutritionModel.isComplete ? \n    nutritionModel.identified ? \"identified\" : \"complete\" \n      : infectionModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n  const constipationClass = !constipationModel ? \"undefined\" : constipationModel.isComplete ?\n    constipationModel.identified ? \"identified\" : \"complete\" \n      : nutritionModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n  const hydrationClass = !hydrationModel ? \"undefined\" : hydrationModel.isComplete ? \n    hydrationModel.identified ? \"identified\" : \"complete\" \n      : constipationModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n  const medicationClass = !medicationModel ? \"undefined\" : medicationModel.isComplete ?\n    medicationModel.identified ? \"identified\" : \"complete\" \n      : hydrationModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n  const environmentClass = !environmentModel ? \"undefined\" :environmentModel.isComplete ?\n    environmentModel.identified ? \"identified\" : \"complete\" \n      : medicationModel.isComplete ? \"inprogress\" : \"notstarted\";\n\n      const progressBarClass = complete ? \"progress-bar complete\" : \"progress-bar\"\n\n  return(\n\n    <div className={progressBarClass}>\n      <div className={painClass}>\n        {(painClass === \"inprogress\" || complete) ? \"Pain\":\"P\"}\n      </div>\n      <div className={infectionClass}>\n        {(infectionClass === \"inprogress\" || complete) ? \"Infection\":\"I\"}\n      </div>\n      <div className={nutritionClass}>\n        {(nutritionClass === \"inprogress\" || complete) ? \"Nutrition\":\"N\"}\n      </div>\n      <div className={constipationClass}>\n        {(constipationClass === \"inprogress\" || complete) ? \"Constipation\":\"C\"}\n      </div>\n      <div className={hydrationClass}>\n        {(hydrationClass === \"inprogress\" || complete) ? \"Hydration\":\"H\"}\n      </div>\n      <div className={medicationClass}>\n        {(medicationClass === \"inprogress\" || complete) ? \"Medication\":\"M\"}\n      </div>\n      <div className={environmentClass}>\n        {(environmentClass === \"inprogress\" || complete) ? \"Environment\":\"E\"}\n      </div>\n    </div>\n    \n  );\n}\n\nexport default AssessmentProgressBar;\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class ConstipationBowel extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"constipationBowel\",\n        answer: null,\n        identified:null,\n        pr:false\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: !answer,\n      pr: false\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var prModel = {name:\"constipationBowelPR\",value:this.state.pr};\n    var doneModel = {name:\"constipationBowelDone\", value:true};\n\n    var updateModels = [questionModel,prModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has the patient had a bowel movement in 3 days?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n\n        {this.state.answer === false &&\n        <p>\n          <span className=\"assessment-checkbox-label\">PR </span>\n          <input type=\"checkbox\"\n          className=\"assessment-checkbox\"\n          checked={this.state.pr}\n          onClick={(e)=>this.setState({pr: e.target.checked})}\n          />\n\n\n        </p>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default ConstipationBowel\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class ConstipationLaxatives extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"constipationLaxatives\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    if(this.props.model === nextProps.model){\n      console.log(\"UPDATING!!\");\n      return true;\n    }\n\n    return false;\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: !answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"constipationLaxativesDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has the patient been prescribed and given sufficient laxatives?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default ConstipationLaxatives\n","import React from \"react\"\nimport ConstipationBowel from './constipationBowel';\nimport ConstipationLaxatives from './constipationLaxatives';\n\nexport function Constipation(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.constipationBowelDone ? <ConstipationBowel {...props} />\n      : !model.constipationLaxativesDone ? <ConstipationLaxatives {...props}/>\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Constipation\n","import React from \"react\"\nimport HydrationOverloaded from './hydrationOverloaded';\nimport HydrationIntake from \"./hydrationIntake\";\nimport HydrationOutput from \"./hydrationOutput\";\n\nexport function Hydration(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.hydrationOverloadedDone ? <HydrationOverloaded {...props} />\n      : !model.hydrationIntakeDone ? <HydrationIntake {...props} />\n        : !model.hydrationOutputDone ? <HydrationOutput {...props} />\n          :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Hydration\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationMedications extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationMedications\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationMedicationsDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Have new anti-emetics/anti-epileptic/cardiac/mental health medications been given recently?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationMedications\n","import React from \"react\"\nimport PainScore from \"./painScore\";\nimport PainHistory from \"./painHistory\";\nimport PainAnalgesia from \"./painAnalgesia\";\nimport PainAdvise from \"./painAdvise\";\n\nexport function Pain(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.painScoreDone ? <PainScore {...props} />\n      : !model.painHistoryDone ? <PainHistory {...props}/>\n        : !model.painAnalgesiaDone ? <PainAnalgesia {...props}/>\n          : !model.painAdviseDone ? <PainAdvise {...props}/>\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Pain\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionUrine extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionUrine\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionUrineDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionUrineDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Urine</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionUrine\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class HydrationOverloaded extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationOverloaded\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationOverloadedDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Does the patient look dehydrated/overloaded?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationOverloaded\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class EnvironmentHistory extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"environmentHistory\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"environmentHistoryDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        \n        <h3>Is there a history of?</h3>\n        <p className=\"assessment-list\">\n          <ul >\n            <li>Long term confusion with no diagnosis</li>\n            <li>Poor 4AT score</li>\n            <li>Previous excessive alcohol use</li>\n            <li>Previous drug use</li>\n          </ul>  \n        </p>\n \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default EnvironmentHistory\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class PainHistory extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"painHistory\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"painHistoryDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Is there a history of confusion/hallucinations with opiates?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default PainHistory\n","import React from \"react\"\nimport NutritionIntake from \"./nutritionIntake\";\nimport NutritionSymptom from \"./nutritionSymptom\";\n\nexport function Nutrition(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.nutritionIntakeDone ? <NutritionIntake {...props} />\n      : !model.nutritionSymptomDone ? <NutritionSymptom {...props}/>\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Nutrition\n","module.exports = __webpack_public_path__ + \"static/DeliriumAssessmentTool-676a29f6896d2d1bf2c62f3b165425df.pdf\";","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\n\nexport class HydrationOutput extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"hydrationOutput\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"hydrationOutputDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Urine output for shift</h3>     \n\n        <p>\n              <input \n              placeholder=\"output in ml\"\n              type=\"number\"\n              className=\"assessment-input\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({answer: e.target.value})}\n              />\n            </p>\n        <p style={{marginTop: '4em'}}>\n          { !isNaN(this.state.answer) && this.state.answer!== \"\" ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default HydrationOutput\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class InfectionSurgical extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"infectionSurgical\",\n        answer: null,\n        identified:null,\n\n        showDate: false,\n        date:\"\"\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer === \"N/A\" ? false : true,\n      showDate:false,\n      date: \"\"\n    })\n  }\n\n  handleShowDate =()=>{\n    this.setState({\n      answer: true,\n      identified: true,\n      showDate: true\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"infectionSurgicalDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n    if(this.state.showDate){\n      var dateModel = {name:\"infectionSurgicalDate\", value:this.state.date};\n     updateModels.push(dateModel);\n    }\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p>Are they symptomatic of infection?</p>\n        <h3>Surgical wound(s)</h3>     \n        <p>\n          <button \n            className={this.state.showDate === true ? selected : unselected}\n            onClick={()=>this.handleShowDate()} >\n              Yes\n          </button>\n          <button \n            className={this.state.answer === \"A/T\" ? selected : unselected}\n            onClick={()=>this.handleAnswer(\"A/T\")} >\n              Already Treating\n          </button>\n          <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n\n        {this.state.showDate === true &&\n          <>\n            <h4>Date of Sample</h4>\n            <p>\n              <input \n              className=\"assessment-input\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={(e)=>this.setState({date: e.target.value})}\n              />\n            </p>\n          </>\n        }\n       \n        <p style={{marginTop: '4em'}}>\n          { (this.state.showDate === false && this.state.answer !== null) || (this.state.showDate === true && this.state.date.length > 0) ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default InfectionSurgical\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class PainAdvise extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"painAdvise\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"painAdviseDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Is the patient’s pain uncontrolled or advice is required?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default PainAdvise\n","import React from \"react\"\nimport MedicationDementia from './medicationDementia';\nimport MedictionParkinsons from './medicationParkinsons';\nimport MedicationAnalgesia from './medicationAnalgesia';\nimport MedicationMedications from './medicationMedications';\n\nexport function Medication(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.medicationDementiaDone ? <MedicationDementia {...props} />\n      : !model.medicationParkinsonsDone ? <MedictionParkinsons {...props} />\n        : !model.medicationAnalgesiaDone ? <MedicationAnalgesia {...props} />\n          : !model.medicationMedicationsDone ? <MedicationMedications {...props} />\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Medication\n","import React from \"react\"\n\nexport function PainScore(props){\n\n  const model = props.model ? props.model : {};\n  const unselected = \"btn btn-primary\";\n  const selected = \"btn btn-primary btn-selected\";\n\n  const handleUpdate = (name, value, identified) => {\n      props.onUpdate({name,value}, identified);\n  }\n\n  return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <p style={{marginBottom: '.5em'}}>what is the patient's</p>\n        <h3>Average Abbey Pain Scale Score</h3>     \n        <p>\n          <button \n            className={model.painScore === 0 ? selected : unselected}\n            onClick={()=>handleUpdate(\"painScore\", 0)} >\n              None\n          </button>\n          <button className={model.painScore === 1 ? selected : unselected}\n          onClick={()=>handleUpdate(\"painScore\", 1)}>\n            Mild\n            </button>\n        </p>\n        <p>\n          <button className={model.painScore === 2 ? selected : unselected}\n          onClick={()=>handleUpdate(\"painScore\", 2, true)}>\n            Moderate\n          </button>\n          <button className={model.painScore === 3 ? selected : unselected}\n          onClick={()=>handleUpdate(\"painScore\", 3, true)}\n          >\n            Severe\n          </button>\n        </p>\n        <p style={{marginTop: '6em'}}>\n          { model.painScore !== undefined ? <button\n         className={unselected}\n         onClick={()=>handleUpdate(\"painScoreDone\", true)}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n}\n\n\nexport default PainScore\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class PainAnalgesia extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"painAnalgesia\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"painAnalgesiaDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Are we using PRN analgesia when required?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default PainAnalgesia\n","import React from \"react\"\nimport InfectionChest from \"./infectionChest\";\nimport InfectionUrine from \"./infectionUrine\";\nimport InfectionSurgical from \"./infectionSurgical\";\n\nexport function Infection(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.infectionChestDone ? <InfectionChest {...props} />\n      : !model.infectionUrineDone ? <InfectionUrine {...props}/>\n        : !model.infectionSurgicalDone ? <InfectionSurgical {...props}/>\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Infection\n"],"sourceRoot":""}