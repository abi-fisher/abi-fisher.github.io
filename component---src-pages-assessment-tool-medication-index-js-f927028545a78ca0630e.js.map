{"version":3,"sources":["webpack:///./src/pages/AssessmentTool/Medication/medicationParkinsons.js","webpack:///./src/pages/AssessmentTool/Medication/medicationDementia.js","webpack:///./src/pages/AssessmentTool/Medication/medicationAnalgesia.js","webpack:///./src/pages/AssessmentTool/Medication/medicationMedications.js","webpack:///./src/pages/AssessmentTool/Medication/index.js"],"names":["selected","MedicationParkinsons","props","state","question","answer","identified","handleAnswer","this","setState","handleSubmit","updateModels","name","value","onUpdateMany","render","style","textAlign","marginTop","className","onClick","React","Component","MedicationDementia","MedicationAnalgesia","MedicationMedications","Medication","model","medicationDementiaDone","medicationParkinsonsDone","medicationAnalgesiaDone","medicationMedicationsDone"],"mappings":"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","file":"component---src-pages-assessment-tool-medication-index-js-f927028545a78ca0630e.js","sourcesContent":["import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationParkinsons extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationParkinsons\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationParkinsonsDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has there been a change/omission in regular Parkinsonâ€™s medication?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n            <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationParkinsons\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationDementia extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationDementia\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationDementiaDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has there been a change/omission in regular dementia medications?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n            <button className={this.state.answer === \"N/A\" ? selected : unselected}\n          onClick={()=>this.handleAnswer(\"N/A\")}>\n            N/A\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationDementia\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationAnalgesia extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationAnalgesia\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationAnalgesiaDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Has new analgesia been given recently? Specifically NSAIDs/opiates</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationAnalgesia\n","import React from \"react\"\n\nconst unselected = \"btn btn-primary\";\nconst selected = \"btn btn-primary btn-selected\";\n\nexport class MedicationMedications extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        question: \"medicationMedications\",\n        answer: null,\n        identified:null,\n    };\n  }\n\n  handleAnswer(answer){\n    this.setState({\n      answer: answer,\n      identified: answer,\n    })\n  }\n\n  handleSubmit(){\n    \n    var questionModel = {name: this.state.question, value: this.state.answer};\n    var doneModel = {name:\"medicationMedicationsDone\", value:true};\n\n    var updateModels = [questionModel, doneModel];\n\n    this.props.onUpdateMany(updateModels, this.state.identified, true);\n  }\n\n\n  render(){\n\n    return(\n\n      <div style={{textAlign: 'center', marginTop: '3em'}}>\n        <h3>Have new anti-emetics/anti-epileptic/cardiac/mental health medications been given recently?</h3>     \n        <p>       \n          <button \n            className={this.state.answer === true ? selected : unselected}\n            onClick={()=>this.handleAnswer(true)} >\n              Yes\n          </button>\n          <button className={this.state.answer === false ? selected : unselected}\n          onClick={()=>this.handleAnswer(false)}>\n            No\n            </button>\n        </p>\n       \n        <p style={{marginTop: '4em'}}>\n          { this.state.answer !== null ? <button\n         className={unselected}\n         onClick={()=>this.handleSubmit()}\n        >Next</button> : <></> }</p>\n      </div>\n  );\n  }\n\n}\n\nexport default MedicationMedications\n","import React from \"react\"\nimport MedicationDementia from './medicationDementia';\nimport MedictionParkinsons from './medicationParkinsons';\nimport MedicationAnalgesia from './medicationAnalgesia';\nimport MedicationMedications from './medicationMedications';\n\nexport function Medication(props){\n\n  const model = props.model ? props.model : {};\n\n  return(   \n    !model.medicationDementiaDone ? <MedicationDementia {...props} />\n      : !model.medicationParkinsonsDone ? <MedictionParkinsons {...props} />\n        : !model.medicationAnalgesiaDone ? <MedicationAnalgesia {...props} />\n          : !model.medicationMedicationsDone ? <MedicationMedications {...props} />\n            :<p>there are no further questions for this section.</p>    \n  );\n}\n\nexport default Medication\n"],"sourceRoot":""}